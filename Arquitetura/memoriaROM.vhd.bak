library IEEE;
use IEEE.std_logic_1164.all;
use ieee.numeric_std.all;

entity memoriaROM is
   generic (
          dataWidth: natural := 4;
          addrWidth: natural := 3
    );
   port (
          Endereco : in std_logic_vector (addrWidth-1 DOWNTO 0);
          Dado : out std_logic_vector (dataWidth-1 DOWNTO 0)
    );
end entity;

architecture assincrona of memoriaROM is

  constant NOP  : std_logic_vector(3 downto 0) := "0000";
  constant LDA  : std_logic_vector(3 downto 0) := "0001";
  constant SOMA : std_logic_vector(3 downto 0) := "0010";
  constant SUB  : std_logic_vector(3 downto 0) := "0011";
  constant LDI  : std_logic_vector(3 downto 0) := "0100";
  constant STA  : std_logic_vector(3 downto 0) := "0101";
  constant JMP  : std_logic_vector(3 downto 0) := "0110";
  constant JEQ  : std_logic_vector(3 downto 0) := "0111";
  constant CEQ  : std_logic_vector(3 downto 0) := "1000";
  constant JSR  : std_logic_vector(3 downto 0) := "1001";
  constant RET  : std_logic_vector(3 downto 0) := "1010";
  constant OP_AND : std_logic_vector(3 downto 0) := "1011";
  
  constant R0 : std_logic_vector(2 downto 0) := "000";
  constant R1 : std_logic_vector(2 downto 0) := "001";
  constant R2 : std_logic_vector(2 downto 0) := "010";
  constant R3 : std_logic_vector(2 downto 0) := "011";
  constant R4 : std_logic_vector(2 downto 0) := "100";
  constant R5 : std_logic_vector(2 downto 0) := "101";
  constant R6 : std_logic_vector(2 downto 0) := "110";
  constant R7 : std_logic_vector(2 downto 0) := "111";
  
  type blocoMemoria is array(0 TO 2**addrWidth - 1) of std_logic_vector(dataWidth-1 DOWNTO 0);

  function initMemory
        return blocoMemoria is variable tmp : blocoMemoria := (others => (others => '0'));
  begin
	
-- INICIO




tmp(0) := LDI & R0 & '0' & x"00";	-- #LDI R0 $0
tmp(1) := STA & R0 & '1' & x"20";	-- #STA @288 R0
tmp(2) := STA & R0 & '1' & x"21";	-- #STA @289 R0
tmp(3) := STA & R0 & '1' & x"22";	-- #STA @290 R0
tmp(4) := STA & R0 & '1' & x"23";	-- #STA @291 R0
tmp(5) := STA & R0 & '1' & x"24";	-- #STA @292 R0
tmp(6) := STA & R0 & '1' & x"25";	-- #STA @293 R0



tmp(7) := LDI & R0 & '0' & x"00";	-- #LDI R0 $0
tmp(8) := STA & R0 & '1' & x"00";	-- #STA @256 R0
tmp(9) := STA & R0 & '1' & x"01";	-- #STA @257 R0
tmp(10) := STA & R0 & '1' & x"02";	-- #STA @258 R0



tmp(11) := LDI & R0 & '0' & x"00";	-- #LDI R0 $0
tmp(12) := STA & R0 & '0' & x"00";	-- #STA @0 R0

tmp(13) := LDI & R0 & '0' & x"01";	-- #LDI R0 $1
tmp(14) := STA & R0 & '0' & x"01";	-- #STA @1 R0

tmp(15) := LDI & R0 & '0' & x"02";	-- #LDI R0 $2
tmp(16) := STA & R0 & '0' & x"02";	-- #STA @2 R0

tmp(17) := LDI & R0 & '0' & x"05";	-- #LDI R0 $5
tmp(18) := STA & R0 & '0' & x"05";	-- #STA @5 R0

tmp(19) := LDI & R0 & '0' & x"04";	-- #LDI R0 $4
tmp(20) := STA & R0 & '0' & x"04";	-- #STA @4 R0

tmp(21) := LDI & R0 & '0' & x"09";	-- #LDI R0 $9
tmp(22) := STA & R0 & '0' & x"09";	-- #STA @9 R0




tmp(23) := LDI & R0 & '0' & x"00";	-- #LDI R0 $0
tmp(24) := LDI & R1 & '0' & x"00";	-- #LDI R1 $0
tmp(25) := LDI & R2 & '0' & x"00";	-- #LDI R2 $0
tmp(26) := LDI & R3 & '0' & x"00";	-- #LDI R3 $0
tmp(27) := LDI & R4 & '0' & x"00";	-- #LDI R4 $0
tmp(28) := LDI & R5 & '0' & x"00";	-- #LDI R5 $0
tmp(29) := LDI & R6 & '0' & x"00";	-- #LDI R6 $0
tmp(30) := LDI & R7 & '0' & x"00";	-- #LDI R7 $0


tmp(31) := NOP & R0 & '0' & x"00";	-- #NOP R0 @0
tmp(32) := LDA & R0 & '1' & x"60";	-- #LDA R0 @352
tmp(33) := OP_AND & R0 & '0' & x"01";	-- #OP_AND R0 @1
tmp(34) := CEQ & R0 & '0' & x"01";	-- #CEQ R0 @1
tmp(35) := JEQ & "000" & '0' & x"32";	-- #JEQ @50
tmp(36) := NOP & R0 & '0' & x"00";	-- #NOP R0 @0

tmp(37) := LDA & R0 & '1' & x"61";	-- #LDA R0 @353
tmp(38) := OP_AND & R0 & '0' & x"01";	-- #OP_AND R0 @1
tmp(39) := CEQ & R0 & '0' & x"01";	-- #CEQ R0 @1
tmp(40) := JEQ & "000" & '0' & x"77";	-- #JEQ @119
tmp(41) := NOP & R0 & '0' & x"00";	-- #NOP R0 @0
tmp(42) := JMP & "000" & '0' & x"24";	-- #JMP @36



tmp(43) := STA & R0 & '1' & x"FF";	-- #STA @511 R0
tmp(44) := LDI & R0 & '0' & x"00";	-- #LDI R0 $0

tmp(45) := CEQ & R1 & '0' & x"09";	-- #CEQ R1 @9
tmp(46) := JEQ & "000" & '0' & x"3A";	-- #JEQ @58

tmp(47) := SOMA & R1 & '0' & x"01";	-- #SOMA R1 @1
tmp(48) := STA & R1 & '1' & x"20";	-- #STA @288 R1
tmp(49) := JMP & "000" & '0' & x"24";	-- #JMP @36



tmp(50) := LDI & R1 & '0' & x"00";	-- #LDI R1 $0
tmp(51) := STA & R1 & '1' & x"20";	-- #STA @288 R1

tmp(52) := CEQ & R2 & '0' & x"05";	-- #CEQ R2 @5
tmp(53) := JEQ & "000" & '0' & x"42";	-- #JEQ @66

tmp(54) := SOMA & R2 & '0' & x"01";	-- #SOMA R2 @1
tmp(55) := STA & R2 & '1' & x"21";	-- #STA @289 R2
tmp(56) := JMP & "000" & '0' & x"24";	-- #JMP @36



tmp(57) := LDI & R2 & '0' & x"00";	-- #LDI R2 $0
tmp(58) := STA & R2 & '1' & x"21";	-- #STA @289 R2

tmp(59) := CEQ & R3 & '0' & x"09";	-- #CEQ R3 @9
tmp(60) := JEQ & "000" & '0' & x"4A";	-- #JEQ @74

tmp(61) := SOMA & R3 & '0' & x"01";	-- #SOMA R3 @1
tmp(62) := STA & R3 & '1' & x"22";	-- #STA @290 R3
tmp(63) := JMP & "000" & '0' & x"24";	-- #JMP @36



tmp(64) := LDI & R3 & '0' & x"00";	-- #LDI R3 $0
tmp(65) := STA & R3 & '1' & x"22";	-- #STA @290 R3

tmp(66) := CEQ & R4 & '0' & x"05";	-- #CEQ R4 @5
tmp(67) := JEQ & "000" & '0' & x"52";	-- #JEQ @82

tmp(68) := SOMA & R4 & '0' & x"01";	-- #SOMA R4 @1
tmp(69) := STA & R4 & '1' & x"23";	-- #STA @291 R4
tmp(70) := JMP & "000" & '0' & x"24";	-- #JMP @36



tmp(71) := LDI & R4 & '0' & x"00";	-- #LDI R4 $0
tmp(72) := STA & R4 & '1' & x"23";	-- #STA @291 R4

tmp(73) := CEQ & R5 & '0' & x"09";	-- #CEQ R5 @9
tmp(74) := JEQ & "000" & '0' & x"5C";	-- #JEQ @92

tmp(75) := SOMA & R5 & '0' & x"01";	-- #SOMA R5 @1
tmp(76) := STA & R5 & '1' & x"24";	-- #STA @292 R5

tmp(77) := CEQ & R5 & '0' & x"04";	-- #CEQ R5 @4
tmp(78) := JEQ & "000" & '0' & x"62";	-- #JEQ @98

tmp(79) := JMP & "000" & '0' & x"24";	-- #JMP @36



tmp(80) := LDI & R5 & '0' & x"00";	-- #LDI R5 $0
tmp(81) := STA & R5 & '1' & x"24";	-- #STA @292 R5

tmp(82) := SOMA & R6 & '0' & x"01";	-- #SOMA R6 @1
tmp(83) := STA & R6 & '1' & x"25";	-- #STA @293 R6
tmp(84) := JMP & "000" & '0' & x"24";	-- #JMP @36



tmp(85) := CEQ & R6 & '0' & x"02";	-- #CEQ R6 @2
tmp(86) := JEQ & "000" & '0' & x"66";	-- #JEQ @102
tmp(87) := JMP & "000" & '0' & x"24";	-- #JMP @36



tmp(88) := LDI & R0 & '0' & x"FF";	-- #LDI R0 $255
tmp(89) := STA & R0 & '1' & x"00";	-- #STA @256 R0
tmp(90) := LDI & R0 & '0' & x"01";	-- #LDI R0 $1
tmp(91) := STA & R0 & '1' & x"01";	-- #STA @257 R0
tmp(92) := STA & R0 & '1' & x"02";	-- #STA @258 R0


tmp(93) := LDA & R0 & '1' & x"64";	-- #LDA R0 @356
tmp(94) := OP_AND & R0 & '0' & x"01";	-- #OP_AND R0 @1
tmp(95) := CEQ & R0 & '0' & x"00";	-- #CEQ R0 @0
tmp(96) := JEQ & "000" & '0' & x"71";	-- #JEQ @113
tmp(97) := JMP & "000" & '0' & x"6B";	-- #JMP @107



tmp(98) := LDI & R0 & '0' & x"00";	-- #LDI R0 $0
tmp(99) := STA & R0 & '1' & x"00";	-- #STA @256 R0
tmp(100) := STA & R0 & '1' & x"01";	-- #STA @257 R0
tmp(101) := STA & R0 & '1' & x"02";	-- #STA @258 R0
tmp(102) := JMP & "000" & '0' & x"24";	-- #JMP @36




tmp(103) := STA & R0 & '1' & x"FE";	-- #STA @510 R0

tmp(104) := LDI & R0 & '0' & x"00";	-- #LDI R0 $0
tmp(105) := STA & R0 & '1' & x"20";	-- #STA @288 R0
tmp(106) := STA & R0 & '1' & x"21";	-- #STA @289 R0
tmp(107) := STA & R0 & '1' & x"22";	-- #STA @290 R0
tmp(108) := STA & R0 & '1' & x"23";	-- #STA @291 R0
tmp(109) := STA & R0 & '1' & x"24";	-- #STA @292 R0
tmp(110) := STA & R0 & '1' & x"25";	-- #STA @293 R0



tmp(111) := LDI & R0 & '0' & x"01";	-- #LDI R0 $1
tmp(112) := STA & R0 & '1' & x"00";	-- #STA @256 R0

tmp(113) := LDA & R0 & '1' & x"40";	-- #LDA R0 @320
tmp(114) := LDA & R1 & '1' & x"40";	-- #LDA R1 @320
tmp(115) := STA & R0 & '1' & x"20";	-- #STA @288 R0

tmp(116) := LDA & R0 & '1' & x"61";	-- #LDA R0 @353
tmp(117) := OP_AND & R0 & '0' & x"01";	-- #OP_AND R0 @1
tmp(118) := CEQ & R0 & '0' & x"01";	-- #CEQ R0 @1
tmp(119) := JEQ & "000" & '0' & x"8B";	-- #JEQ @139
tmp(120) := JMP & "000" & '0' & x"80";	-- #JMP @128




tmp(121) := STA & R0 & '1' & x"FE";	-- #STA @510 R0


tmp(122) := LDI & R0 & '0' & x"02";	-- #LDI R0 $2
tmp(123) := STA & R0 & '1' & x"00";	-- #STA @256 R0

tmp(124) := LDA & R0 & '1' & x"40";	-- #LDA R0 @320
tmp(125) := LDA & R2 & '1' & x"40";	-- #LDA R2 @320
tmp(126) := STA & R0 & '1' & x"21";	-- #STA @289 R0

tmp(127) := LDA & R0 & '1' & x"61";	-- #LDA R0 @353
tmp(128) := OP_AND & R0 & '0' & x"01";	-- #OP_AND R0 @1
tmp(129) := CEQ & R0 & '0' & x"01";	-- #CEQ R0 @1
tmp(130) := JEQ & "000" & '0' & x"97";	-- #JEQ @151
tmp(131) := JMP & "000" & '0' & x"8C";	-- #JMP @140



tmp(132) := STA & R0 & '1' & x"FE";	-- #STA @510 R0


tmp(133) := LDI & R0 & '0' & x"04";	-- #LDI R0 $4
tmp(134) := STA & R0 & '1' & x"00";	-- #STA @256 R0

tmp(135) := LDA & R0 & '1' & x"40";	-- #LDA R0 @320
tmp(136) := LDA & R3 & '1' & x"40";	-- #LDA R3 @320
tmp(137) := STA & R0 & '1' & x"22";	-- #STA @290 R0

tmp(138) := LDA & R0 & '1' & x"61";	-- #LDA R0 @353
tmp(139) := OP_AND & R0 & '0' & x"01";	-- #OP_AND R0 @1
tmp(140) := CEQ & R0 & '0' & x"01";	-- #CEQ R0 @1
tmp(141) := JEQ & "000" & '0' & x"A3";	-- #JEQ @163
tmp(142) := JMP & "000" & '0' & x"98";	-- #JMP @152



tmp(143) := STA & R0 & '1' & x"FE";	-- #STA @510 R0


tmp(144) := LDI & R0 & '0' & x"08";	-- #LDI R0 $8
tmp(145) := STA & R0 & '1' & x"00";	-- #STA @256 R0

tmp(146) := LDA & R0 & '1' & x"40";	-- #LDA R0 @320
tmp(147) := LDA & R4 & '1' & x"40";	-- #LDA R4 @320
tmp(148) := STA & R0 & '1' & x"23";	-- #STA @291 R0

tmp(149) := LDA & R0 & '1' & x"61";	-- #LDA R0 @353
tmp(150) := OP_AND & R0 & '0' & x"01";	-- #OP_AND R0 @1
tmp(151) := CEQ & R0 & '0' & x"01";	-- #CEQ R0 @1
tmp(152) := JEQ & "000" & '0' & x"AF";	-- #JEQ @175
tmp(153) := JMP & "000" & '0' & x"A4";	-- #JMP @164



tmp(154) := STA & R0 & '1' & x"FE";	-- #STA @510 R0


tmp(155) := LDI & R0 & '0' & x"10";	-- #LDI R0 $16
tmp(156) := STA & R0 & '1' & x"00";	-- #STA @256 R0

tmp(157) := LDA & R0 & '1' & x"40";	-- #LDA R0 @320
tmp(158) := LDA & R5 & '1' & x"40";	-- #LDA R5 @320
tmp(159) := STA & R0 & '1' & x"24";	-- #STA @292 R0

tmp(160) := LDA & R0 & '1' & x"61";	-- #LDA R0 @353
tmp(161) := OP_AND & R0 & '0' & x"01";	-- #OP_AND R0 @1
tmp(162) := CEQ & R0 & '0' & x"01";	-- #CEQ R0 @1
tmp(163) := JEQ & "000" & '0' & x"BB";	-- #JEQ @187
tmp(164) := JMP & "000" & '0' & x"B0";	-- #JMP @176



tmp(165) := STA & R0 & '1' & x"FE";	-- #STA @510 R0


tmp(166) := LDI & R0 & '0' & x"20";	-- #LDI R0 $32
tmp(167) := STA & R0 & '1' & x"00";	-- #STA @256 R0

tmp(168) := LDA & R0 & '1' & x"40";	-- #LDA R0 @320
tmp(169) := LDA & R6 & '1' & x"40";	-- #LDA R6 @320
tmp(170) := STA & R0 & '1' & x"25";	-- #STA @293 R0

tmp(171) := LDA & R0 & '1' & x"61";	-- #LDA R0 @353
tmp(172) := OP_AND & R0 & '0' & x"01";	-- #OP_AND R0 @1
tmp(173) := CEQ & R0 & '0' & x"01";	-- #CEQ R0 @1
tmp(174) := JEQ & "000" & '0' & x"C6";	-- #JEQ @198
tmp(175) := JMP & "000" & '0' & x"BC";	-- #JMP @188


tmp(176) := STA & R0 & '1' & x"FE";	-- #STA @510 R0
tmp(177) := LDI & R0 & '0' & x"00";	-- #LDI R0 $0
tmp(178) := STA & R0 & '1' & x"00";	-- #STA @256 R0
tmp(179) := STA & R0 & '1' & x"FF";	-- #STA @511 R0
tmp(180) := JMP & "000" & '0' & x"24";	-- #JMP @36
-- FIM
        return tmp;
    end initMemory;

    signal memROM : blocoMemoria := initMemory;

begin
    Dado <= memROM (to_integer(unsigned(Endereco)));
end architecture;